// (c) 2023-present, LDC Labs. All rights reserved.
// See the file LICENSE for licensing terms.

import { assert, describe, it } from 'vitest'
import { bytesToHex, hexToBytes } from './utils'
import * as iana from './iana'
import { HMACKey } from './hmac'

describe('HMACKey Examples', () => {
  it('mac', () => {
    // [alg, secret, message, tag]
    const cases: [number, string, string, string][] = [
      [
        iana.AlgorithmHMAC_256_256,
        '849B57219DAE48DE646D07DBB533566E976686457C1491BE3A76DCEA6C427188',
        '84634D414343A101054054546869732069732074686520636F6E74656E742E',
        '2BDCC89F058216B8A208DDC6D8B54AA91F48BD63484986565105C9AD5A6682F6',
      ],
      [
        iana.AlgorithmHMAC_384_384,
        '849B57219DAE48DE646D07DBB533566E976686457C1491BE3A76DCEA6C42718800112233778899AA2122232425262728',
        '84634D414343A101064054546869732069732074686520636F6E74656E742E',
        'B3097F70009A11507409598A83E15BBBBF1982DCE28E5AB6D5A6AFF6897BD24BB8B7479622C9401B24090D458206D587',
      ],
      [
        iana.AlgorithmHMAC_512_512,
        '849B57219DAE48DE646D07DBB533566E976686457C1491BE3A76DCEA6C42718800112233778899AA2122232425262728AABBCCDDEEFFA5A6A7A8A9A0B1B2B3B4',
        '84634D414343A101074054546869732069732074686520636F6E74656E742E',
        'CD28A6B3CFBBBF214851B906E050056CB438A8B88905B8B7461977022711A9D8AC5DBC54E29A56D926046B40FC2607C25B344454AA5F68DE09A3E525D3865A05',
      ],
      [
        iana.AlgorithmHMAC_256_64,
        '849B57219DAE48DE646D07DBB533566E976686457C1491BE3A76DCEA6C427188',
        '84634D414343A101044054546869732069732074686520636F6E74656E742E',
        '6F35CAB779F77833',
      ],
    ]

    for (const [alg, secret, message, tag] of cases) {
      const key = HMACKey.fromSecret(hexToBytes(secret), alg)
      assert.equal(bytesToHex(key.mac(hexToBytes(message))).toUpperCase(), tag)
    }
  })
})
